<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Osm.Data.Core</name>
    </assembly>
    <members>
        <member name="T:Osm.Data.Core.Sparse.Primitives.SparseSimpleVertex">
            <summary>
            Represents a simple vertex that is part of the road network.
            </summary>
        </member>
        <member name="T:Osm.Data.Core.Sparse.Primitives.SimpleVertex">
            <summary>
            Contains basic vertex information.
            </summary>
        </member>
        <member name="T:Osm.Data.Core.Raw.Memory.MemoryDataSourceProcessorTarget">
            <summary>
            A memory data source processor target.
            </summary>
        </member>
        <member name="T:Osm.Data.Core.Processor.DataProcessorTarget">
            <summary>
            Any target of osm data (Nodes, Ways and Relations).
            </summary>
        </member>
        <member name="F:Osm.Data.Core.Processor.DataProcessorTarget._source">
            <summary>
            Holds the source for this target.
            </summary>
        </member>
        <member name="M:Osm.Data.Core.Processor.DataProcessorTarget.#ctor">
            <summary>
            Creates a new target.
            </summary>
        </member>
        <member name="M:Osm.Data.Core.Processor.DataProcessorTarget.Initialize">
            <summary>
            Initializes the target.
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:Osm.Data.Core.Processor.DataProcessorTarget.ApplyChange(Osm.Core.Simple.SimpleChangeSet)">
            <summary>
            Applies a change to the target.
            </summary>
            <param name="change"></param>
        </member>
        <member name="M:Osm.Data.Core.Processor.DataProcessorTarget.AddNode(Osm.Core.Simple.SimpleNode)">
            <summary>
            Adds a node to the target.
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:Osm.Data.Core.Processor.DataProcessorTarget.AddWay(Osm.Core.Simple.SimpleWay)">
            <summary>
            Adds a way to the target.
            </summary>
            <param name="way"></param>
        </member>
        <member name="M:Osm.Data.Core.Processor.DataProcessorTarget.AddRelation(Osm.Core.Simple.SimpleRelation)">
            <summary>
            Adds a relation to the target.
            </summary>
            <param name="relation"></param>
        </member>
        <member name="M:Osm.Data.Core.Processor.DataProcessorTarget.RegisterSource(Osm.Data.Core.Processor.DataProcessorSource)">
            <summary>
            Registers a source on this target.
            </summary>
            <param name="dataProcessorSource"></param>
        </member>
        <member name="M:Osm.Data.Core.Processor.DataProcessorTarget.Pull">
            <summary>
            Pulls the changes from the source to this target.
            </summary>
        </member>
        <member name="M:Osm.Data.Core.Processor.DataProcessorTarget.Close">
            <summary>
            Closes the current target.
            </summary>
        </member>
        <member name="P:Osm.Data.Core.Processor.DataProcessorTarget.Source">
            <summary>
            Returns the registered source.
            </summary>
        </member>
        <member name="F:Osm.Data.Core.Raw.Memory.MemoryDataSourceProcessorTarget._source">
            <summary>
            Holds the memory data source.
            </summary>
        </member>
        <member name="F:Osm.Data.Core.Raw.Memory.MemoryDataSourceProcessorTarget._string_table">
            <summary>
            Holds the string table.
            </summary>
        </member>
        <member name="M:Osm.Data.Core.Raw.Memory.MemoryDataSourceProcessorTarget.#ctor(Osm.Data.Core.Raw.Memory.MemoryDataSource)">
            <summary>
            Creates a memory data processor target.
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:Osm.Data.Core.Raw.Memory.MemoryDataSourceProcessorTarget.#ctor(Tools.Core.Collections.ObjectTable{System.String},Osm.Data.Core.Raw.Memory.MemoryDataSource)">
            <summary>
            Creates a memory data processor target.
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:Osm.Data.Core.Raw.Memory.MemoryDataSourceProcessorTarget.Initialize">
            <summary>
            Initializes this target.
            </summary>
        </member>
        <member name="M:Osm.Data.Core.Raw.Memory.MemoryDataSourceProcessorTarget.ApplyChange(Osm.Core.Simple.SimpleChangeSet)">
            <summary>
            Applying changesets is not supported.
            </summary>
            <param name="change"></param>
        </member>
        <member name="F:Osm.Data.Core.Raw.Memory.MemoryDataSourceProcessorTarget._nodes">
            <summary>
            Holds all nodes.
            </summary>
        </member>
        <member name="M:Osm.Data.Core.Raw.Memory.MemoryDataSourceProcessorTarget.AddNode(Osm.Core.Simple.SimpleNode)">
            <summary>
            Adds a given node.
            </summary>
            <param name="simple_node"></param>
        </member>
        <member name="F:Osm.Data.Core.Raw.Memory.MemoryDataSourceProcessorTarget._ways">
            <summary>
            Holds all ways.
            </summary>
        </member>
        <member name="M:Osm.Data.Core.Raw.Memory.MemoryDataSourceProcessorTarget.AddWay(Osm.Core.Simple.SimpleWay)">
            <summary>
            Adds a given way.
            </summary>
            <param name="simple_way"></param>
        </member>
        <member name="F:Osm.Data.Core.Raw.Memory.MemoryDataSourceProcessorTarget._relations">
            <summary>
            Holds all relations.
            </summary>
        </member>
        <member name="M:Osm.Data.Core.Raw.Memory.MemoryDataSourceProcessorTarget.AddRelation(Osm.Core.Simple.SimpleRelation)">
            <summary>
            Adds a given relation.
            </summary>
            <param name="simple_relation"></param>
        </member>
        <member name="T:Osm.Data.IDataSource">
            <summary>
            Represents a generic data source.
            
            This datasource can create elements.
            
            Used For: OSM Files
            </summary>
        </member>
        <member name="T:Osm.Data.IDataSourceReadOnly">
            <summary>
            Represents a generic readonly data source.
            
            This datasource can only generate osm elements.
            
            Used for: GPX, KML, ...
            
            </summary>
        </member>
        <member name="M:Osm.Data.IDataSourceReadOnly.GetNode(System.Int64)">
            <summary>
            Returns the node with the given id.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.IDataSourceReadOnly.GetNodes(System.Collections.Generic.IList{System.Int64})">
            <summary>
            Returns the node(s) with the given id(s).
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.IDataSourceReadOnly.GetRelation(System.Int64)">
            <summary>
            Returns the relation with the given id.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.IDataSourceReadOnly.GetRelations(System.Collections.Generic.IList{System.Int64})">
            <summary>
            Returns the relation(s) with the given id(s).
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.IDataSourceReadOnly.GetRelationsFor(Osm.Core.OsmBase)">
            <summary>
            Returns all the relations for the given object.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.IDataSourceReadOnly.GetWay(System.Int64)">
            <summary>
            Returns the way with the given id.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.IDataSourceReadOnly.GetWays(System.Collections.Generic.IList{System.Int64})">
            <summary>
            Returns the way(s) with given id.
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.IDataSourceReadOnly.GetWaysFor(Osm.Core.Node)">
            <summary>
            Returns the way(s) for a given node.
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.IDataSourceReadOnly.Get(Tools.Math.Geo.GeoCoordinateBox,Osm.Core.Filters.Filter)">
            <summary>
            Returns all the objects in this dataset that evaluate the filter to true.
            </summary>
            <param name="box"></param>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="P:Osm.Data.IDataSourceReadOnly.BoundingBox">
            <summary>
            Returns the bounding box of the data in this source if possible.
            </summary>
        </member>
        <member name="P:Osm.Data.IDataSourceReadOnly.Name">
            <summary>
            The name of this datasource.
            </summary>
        </member>
        <member name="P:Osm.Data.IDataSourceReadOnly.Id">
            <summary>
            The unique id for this datasource.
            </summary>
        </member>
        <member name="P:Osm.Data.IDataSourceReadOnly.HasBoundinBox">
            <summary>
            Returns true if this datasource is bounded.
            </summary>
        </member>
        <member name="P:Osm.Data.IDataSourceReadOnly.IsReadOnly">
            <summary>
            Returns true if this datasource is readonly.
            </summary>
        </member>
        <member name="M:Osm.Data.IDataSource.Persist">
            <summary>
            Persists all the data to the underlying source.
            </summary>
        </member>
        <member name="M:Osm.Data.IDataSource.CreateNode">
            <summary>
            Creates a new node.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.IDataSource.CreateRelation">
            <summary>
            Creates a new relation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.IDataSource.CreateWay">
            <summary>
            Creates a new way.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.IDataSource.ApplyChangeSet(Osm.Core.ChangeSet)">
            <summary>
            Applies the given changeset to the data in this datasource.
            </summary>
            <param name="change_set"></param>
        </member>
        <member name="M:Osm.Data.IDataSource.CreateChangeSet">
            <summary>
            Creates a new changeset.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Osm.Data.IDataSource.IsBaseIdGenerator">
            <summary>
            Returns true if this datasource can generate final id's.
            </summary>
        </member>
        <member name="P:Osm.Data.IDataSource.IsCreator">
            <summary>
            Returns true if this datasource can create new objects.
            </summary>
        </member>
        <member name="P:Osm.Data.IDataSource.IsLive">
            <summary>
            Returns true if this data source does not have to be saved.
            
            The data is persisted live or not while adding/removing data.
            </summary>
        </member>
        <member name="T:Osm.Data.Core.Sparse.Primitives.SimpleArc">
            <summary>
            Contains basic vertex information.
            </summary>
        </member>
        <member name="M:Osm.Data.Core.Processor.ChangeSets.DataProcessorChangeSetSource.Initialize">
            <summary>
            Initializes this source.
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:Osm.Data.Core.Processor.ChangeSets.DataProcessorChangeSetSource.MoveNext">
            <summary>
            Move to the next item in the stream.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Core.Processor.ChangeSets.DataProcessorChangeSetSource.Current">
            <summary>
            Returns the current item in the stream.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Core.Processor.ChangeSets.DataProcessorChangeSetSource.Reset">
            <summary>
            Resets the source to the beginning.
            </summary>
        </member>
        <member name="M:Osm.Data.Core.Processor.ChangeSets.DataProcessorChangeSetSource.Close">
            <summary>
            Closes this source.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Osm.Data.KeyGenerator" -->
        <member name="M:Osm.Data.KeyGenerator.GenerateNew">
            <summary>
            Returns the next unique id.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Osm.Data.IApi">
            <summary>
            Represents a full osm api interface.
            
            Used For: OSM Api v0.6.
            </summary>
        </member>
        <member name="M:Osm.Data.IApi.Authenticate(Osm.Core.User,System.String)">
            <summary>
            Authenticates a users; allowing for modifications.
            </summary>
            <param name="user"></param>
            <param name="pass"></param>
            <returns></returns>
        </member>
        <member name="P:Osm.Data.IApi.AuthenticatedUser">
            <summary>
            Returns the authenticated user.
            </summary>
        </member>
        <member name="T:Osm.Data.Core.Processor.DataProcessorSource">
            <summary>
            Base class for any (streamable) source of osm data (Nodes, Ways and Relations).
            </summary>
        </member>
        <member name="M:Osm.Data.Core.Processor.DataProcessorSource.#ctor">
            <summary>
            Creates a new source.
            </summary>
        </member>
        <member name="M:Osm.Data.Core.Processor.DataProcessorSource.Initialize">
            <summary>
            Initializes this source.
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:Osm.Data.Core.Processor.DataProcessorSource.MoveNext">
            <summary>
            Move to the next item in the stream.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Core.Processor.DataProcessorSource.Current">
            <summary>
            Returns the current item in the stream.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Core.Processor.DataProcessorSource.Reset">
            <summary>
            Resets the source to the beginning.
            </summary>
        </member>
        <member name="P:Osm.Data.Core.Processor.DataProcessorSource.CanReset">
            <summary>
            Returns true if this source can be reset.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Osm.Data.Core.Processor.ListSource.OsmGeoListDataProcessorSource">
            <summary>
            A data processor source of regular OsmBase objects.
            </summary>
        </member>
        <member name="F:Osm.Data.Core.Processor.ListSource.OsmGeoListDataProcessorSource._base_objects">
            <summary>
            Holds the list of OsmBase objects.
            </summary>
        </member>
        <member name="F:Osm.Data.Core.Processor.ListSource.OsmGeoListDataProcessorSource._current">
            <summary>
            Holds the current object index.
            </summary>
        </member>
        <member name="M:Osm.Data.Core.Processor.ListSource.OsmGeoListDataProcessorSource.#ctor(System.Collections.Generic.IList{Osm.Core.OsmGeo})">
            <summary>
            Creates a new OsmBase source.
            </summary>
            <param name="base_objects"></param>
        </member>
        <member name="M:Osm.Data.Core.Processor.ListSource.OsmGeoListDataProcessorSource.Initialize">
            <summary>
            Initializes this source.
            </summary>
        </member>
        <member name="M:Osm.Data.Core.Processor.ListSource.OsmGeoListDataProcessorSource.MoveNext">
            <summary>
            Moves to the next object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Core.Processor.ListSource.OsmGeoListDataProcessorSource.Current">
            <summary>
            Returns the current object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Core.Processor.ListSource.OsmGeoListDataProcessorSource.Reset">
            <summary>
            Resets this data source.
            </summary>
        </member>
        <member name="P:Osm.Data.Core.Processor.ListSource.OsmGeoListDataProcessorSource.CanReset">
            <summary>
            Returns true, this source can be reset.
            </summary>
        </member>
        <member name="T:Osm.Data.Core.Processor.SimpleSource.ISimpleSourceData">
            <summary>
            Abstracts a simple data source.
            </summary>
        </member>
        <member name="M:Osm.Data.Core.Processor.SimpleSource.ISimpleSourceData.GetNode(System.Int64)">
            <summary>
            Returns a simple node.
            </summary>
            <param name="node_id"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Core.Processor.SimpleSource.ISimpleSourceData.AddNode(Osm.Core.Simple.SimpleNode)">
            <summary>
            Adds a node.
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:Osm.Data.Core.Processor.SimpleSource.ISimpleSourceData.UpdateNode(Osm.Core.Simple.SimpleNode)">
            <summary>
            Updates the given node.
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:Osm.Data.Core.Processor.SimpleSource.ISimpleSourceData.DeleteNode(System.Int64)">
            <summary>
            Deletes a node with the given id.
            </summary>
            <param name="node_id"></param>
        </member>
        <member name="M:Osm.Data.Core.Processor.SimpleSource.ISimpleSourceData.GetWay(System.Int64)">
            <summary>
            Returns a simple way.
            </summary>
            <param name="node_id"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Core.Processor.SimpleSource.ISimpleSourceData.AddWay(Osm.Core.Simple.SimpleWay)">
            <summary>
            Adds a way.
            </summary>
            <param name="way"></param>
        </member>
        <member name="M:Osm.Data.Core.Processor.SimpleSource.ISimpleSourceData.UpdateWay(Osm.Core.Simple.SimpleWay)">
            <summary>
            Updates the given way.
            </summary>
            <param name="way"></param>
        </member>
        <member name="M:Osm.Data.Core.Processor.SimpleSource.ISimpleSourceData.DeleteWay(System.Int64)">
            <summary>
            Deletes a way with the given id.
            </summary>
            <param name="way_id"></param>
        </member>
        <member name="M:Osm.Data.Core.Processor.SimpleSource.ISimpleSourceData.GetForNode(System.Int64)">
            <summary>
            Returns a collection of ways for a given node.
            </summary>
            <param name="node_id"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Core.Processor.SimpleSource.ISimpleSourceData.GetRelation(System.Int64)">
            <summary>
            Returns a simple relation.
            </summary>
            <param name="node_id"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Core.Processor.SimpleSource.ISimpleSourceData.AddRelation(Osm.Core.Simple.SimpleRelation)">
            <summary>
            Adds a way.
            </summary>
            <param name="way"></param>
        </member>
        <member name="M:Osm.Data.Core.Processor.SimpleSource.ISimpleSourceData.UpdateRelation(Osm.Core.Simple.SimpleRelation)">
            <summary>
            Updates the given way.
            </summary>
            <param name="way"></param>
        </member>
        <member name="M:Osm.Data.Core.Processor.SimpleSource.ISimpleSourceData.DeleteRelation(System.Int64)">
            <summary>
            Deletes a way with the given id.
            </summary>
            <param name="way_id"></param>
        </member>
        <member name="T:Osm.Data.Core.Processor.SimpleSource.SimpleMemoryData">
            <summary>
            Keeps data in the form of simple primitives in memory.
            </summary>
        </member>
        <member name="T:Osm.Data.Core.Processor.Filter.DataProcessorChangeSetFilterBoundingBox">
            <summary>
            Filter processing changesets and filtering them on bounding box based on a database
            that can be queried.
            </summary>
        </member>
        <member name="M:Osm.Data.Core.Processor.Filter.DataProcessorChangeSetFilterBoundingBox.FilterChanges(Osm.Core.Simple.SimpleChangeSet)">
            <summary>
            Filters the geo objects in the changeset and omits the ones not inside the bb.
            </summary>
            <param name="simpleChangeSet"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Core.Processor.Filter.DataProcessorChangeSetFilterBoundingBox.IsInsideBox(Osm.Core.Simple.SimpleChangeSet)">
            <summary>
            Returns true if any part of this changeset exists inside the bounding box.
            </summary>
            <param name="simpleChangeSet"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Core.Processor.Filter.DataProcessorChangeSetFilterBoundingBox.IsInsideBoxRelation(System.Collections.Generic.IList{Osm.Core.Simple.SimpleRelationMember})">
            <summary>
            Returns true if any member of the relation is inside the filter.
            </summary>
            <param name="members"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Core.Processor.Filter.DataProcessorChangeSetFilterBoundingBox.IsInsideBoxRelation(System.Collections.Generic.IList{Osm.Core.Simple.SimpleRelationMember},System.Collections.Generic.HashSet{System.Int64},System.Collections.Generic.HashSet{System.Int64})">
            <summary>
            Returns true if any member of the relation is inside the filter.
            </summary>
            <param name="members"></param>
            <returns></returns>
        </member>
        <member name="T:Osm.Data.Core.Sparse.ISparseData">
            <summary>
            A sparse data interface.
            </summary>
        </member>
        <member name="M:Osm.Data.Core.Sparse.ISparseData.GetSparseVertex(System.Int64)">
            <summary>
            Returns the vertex for the given id.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Core.Sparse.ISparseData.GetSparseVertices(System.Collections.Generic.IList{System.Int64})">
            <summary>
            Returns all the sparse vertices with the given ids and null when there are none.
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Core.Sparse.ISparseData.PersistSparseVertex(Osm.Data.Core.Sparse.Primitives.SparseVertex)">
            <summary>
            Adds/updates the vertex.
            </summary>
            <param name="vertex"></param>
        </member>
        <member name="M:Osm.Data.Core.Sparse.ISparseData.DeleteSparseVertex(System.Int64)">
            <summary>
            Deletes the vertex with the given id.
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Osm.Data.Core.Sparse.ISparseData.PersistSparseSimpleVertex(Osm.Data.Core.Sparse.Primitives.SparseSimpleVertex)">
            <summary>
            Persists a vertex as a bypassed vertex.
            </summary>
            <param name="vertex_id"></param>
            <param name="coordinate"></param>
        </member>
        <member name="M:Osm.Data.Core.Sparse.ISparseData.GetSparseSimpleVertex(System.Int64)">
            <summary>
            Returns the simple vertex.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Core.Sparse.ISparseData.GetSparseSimpleVertices(Tools.Math.Geo.GeoCoordinateBox)">
            <summary>
            Returns all the simple vertices in the given box.
            </summary>
            <param name="box"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Core.Sparse.ISparseData.GetSparseSimpleVertices(System.Collections.Generic.IList{System.Int64})">
            <summary>
            Returns all the simple vertices with the given ids.
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Core.Sparse.ISparseData.DeleteSparseSimpleVertex(System.Int64)">
            <summary>
            Deletes the simple vertex with the given id.
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Osm.Data.Core.Sparse.ISparseData.PersistSimpleVertex(Osm.Data.Core.Sparse.Primitives.SimpleVertex)">
            <summary>
            Persists a vertex as a bypassed vertex.
            </summary>
            <param name="vertex_id"></param>
            <param name="coordinate"></param>
        </member>
        <member name="M:Osm.Data.Core.Sparse.ISparseData.GetSimpleVertex(System.Int64)">
            <summary>
            Returns the simple vertex.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Core.Sparse.ISparseData.GetSimpleVertices(System.Collections.Generic.IList{System.Int64})">
            <summary>
            Returns all the simple vertices with the given ids.
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Core.Sparse.ISparseData.DeleteSimpleVertex(System.Int64)">
            <summary>
            Deletes the simple vertex with the given id.
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Osm.Data.Core.Sparse.ISparseData.PersistSimpleArc(Osm.Data.Core.Sparse.Primitives.SimpleArc)">
            <summary>
            Persists a arc as a bypassed arc.
            </summary>
            <param name="arc_id"></param>
            <param name="coordinate"></param>
        </member>
        <member name="M:Osm.Data.Core.Sparse.ISparseData.GetSimpleArc(System.Int64)">
            <summary>
            Returns the simple arc.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Core.Sparse.ISparseData.GetSimpleArcs(System.Collections.Generic.IList{System.Int64})">
            <summary>
            Returns all the simple arcs with the given ids.
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Core.Sparse.ISparseData.DeleteSimpleArc(System.Int64)">
            <summary>
            Deletes the simple arc with the given id.
            </summary>
            <param name="id"></param>
        </member>
        <member name="T:Osm.Data.Core.Raw.Memory.MemoryDataSource">
            <summary>
            An in-memory data repository of OSM data primitives.
            </summary>
        </member>
        <member name="M:Osm.Data.Core.Raw.Memory.MemoryDataSource.#ctor">
            <summary>
            Creates a new memory data structure.
            </summary>
        </member>
        <member name="M:Osm.Data.Core.Raw.Memory.MemoryDataSource.InitializeDataStructures">
            <summary>
            Initializes the data cache.
            </summary>
        </member>
        <member name="F:Osm.Data.Core.Raw.Memory.MemoryDataSource._box">
            <summary>
            Holds the current bounding box.
            </summary>
        </member>
        <member name="F:Osm.Data.Core.Raw.Memory.MemoryDataSource._id">
            <summary>
            Holds the current Guid.
            </summary>
        </member>
        <member name="M:Osm.Data.Core.Raw.Memory.MemoryDataSource.GetNode(System.Int64)">
            <summary>
            Returns the node with the given id.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Core.Raw.Memory.MemoryDataSource.GetNodes(System.Collections.Generic.IList{System.Int64})">
            <summary>
            Returns the node(s) with the given id(s).
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Core.Raw.Memory.MemoryDataSource.AddNode(Osm.Core.Node)">
            <summary>
            Adds a node.
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:Osm.Data.Core.Raw.Memory.MemoryDataSource.RemoveNode(System.Int64)">
            <summary>
            Removes a node.
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Osm.Data.Core.Raw.Memory.MemoryDataSource.GetRelation(System.Int64)">
            <summary>
            Returns the relation with the given id.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Core.Raw.Memory.MemoryDataSource.GetRelations(System.Collections.Generic.IList{System.Int64})">
            <summary>
            Returns the relation(s) with the given id(s).
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Core.Raw.Memory.MemoryDataSource.AddRelation(Osm.Core.Relation)">
            <summary>
            Adds a relation.
            </summary>
            <param name="relation"></param>
        </member>
        <member name="M:Osm.Data.Core.Raw.Memory.MemoryDataSource.RemoveRelation(System.Int64)">
            <summary>
            Removes a relation.
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Osm.Data.Core.Raw.Memory.MemoryDataSource.GetRelationsFor(Osm.Core.OsmBase)">
            <summary>
            Returns all relations that have the given object as a member.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Core.Raw.Memory.MemoryDataSource.GetWay(System.Int64)">
            <summary>
            Returns the way with the given id.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Core.Raw.Memory.MemoryDataSource.GetWays(System.Collections.Generic.IList{System.Int64})">
            <summary>
            Returns all the way(s) with the given id(s).
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Core.Raw.Memory.MemoryDataSource.GetWaysFor(Osm.Core.Node)">
            <summary>
            Returns all the ways for a given node.
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Core.Raw.Memory.MemoryDataSource.AddWay(Osm.Core.Way)">
            <summary>
            Adds a relation.
            </summary>
            <param name="way"></param>
        </member>
        <member name="M:Osm.Data.Core.Raw.Memory.MemoryDataSource.RemoveWay(System.Int64)">
            <summary>
            Removes a way.
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Osm.Data.Core.Raw.Memory.MemoryDataSource.Get(Tools.Math.Geo.GeoCoordinateBox,Osm.Core.Filters.Filter)">
            <summary>
            Returns all the objects within a given bounding box and filtered by a given filter.
            </summary>
            <param name="box"></param>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Core.Raw.Memory.MemoryDataSource.PullFromSource(Osm.Data.Core.Processor.DataProcessorSource)">
            <summary>
            Adds all objects from the given source to this memory data source.
            </summary>
            <param name="source"></param>
        </member>
        <member name="P:Osm.Data.Core.Raw.Memory.MemoryDataSource.BoundingBox">
            <summary>
            Returns the bounding box around all nodes.
            </summary>
        </member>
        <member name="P:Osm.Data.Core.Raw.Memory.MemoryDataSource.Name">
            <summary>
            Gets/Sets the name of this source.
            </summary>
        </member>
        <member name="P:Osm.Data.Core.Raw.Memory.MemoryDataSource.Id">
            <summary>
            Returns the id.
            </summary>
        </member>
        <member name="P:Osm.Data.Core.Raw.Memory.MemoryDataSource.HasBoundinBox">
            <summary>
            Returns true if there is a bounding box.
            </summary>
        </member>
        <member name="P:Osm.Data.Core.Raw.Memory.MemoryDataSource.IsReadOnly">
            <summary>
            Returns true if this source is readonly.
            </summary>
        </member>
        <member name="P:Osm.Data.Core.Processor.Default.DataProcessorSourceEmpty.CanReset">
            <summary>
            Returns true if this source can be reset.
            </summary>
        </member>
        <member name="T:Osm.Data.Core.Sparse.Primitives.SparseVertex">
            <summary>
            A sparse vertex that is a crucial part of the road network.
            </summary>
        </member>
        <member name="M:Osm.Data.Core.Sparse.Primitives.SparseVertex.#ctor">
            <summary>
            Creates a new vertex.
            </summary>
        </member>
        <member name="M:Osm.Data.Core.Sparse.Primitives.SparseVertex.GetSparseVertexNeighbour(System.Int64)">
            <summary>
            Returns the SparseVertexNeighbour for the given id.
            </summary>
            <param name="neighbour_id"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Core.Sparse.Primitives.SparseVertex.GetSparseVertexNeighbour(System.Int64,System.Int64)">
            <summary>
            Returns the SparseVertexNeighbour for the given id.
            </summary>
            <param name="neighbour_id"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Core.Sparse.Primitives.SparseVertex.Equals(Osm.Data.Core.Sparse.Primitives.SparseVertex)">
            <summary>
            Returns true if the other is equal to this one.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="P:Osm.Data.Core.Sparse.Primitives.SparseVertex.Id">
            <summary>
            Holds the id of the vertex.
            </summary>
        </member>
        <member name="P:Osm.Data.Core.Sparse.Primitives.SparseVertex.Coordinates">
            <summary>
            Holds the coordinates for this vertex.
            </summary>
        </member>
        <member name="P:Osm.Data.Core.Sparse.Primitives.SparseVertex.Neighbours">
            <summary>
            Holds the actual neighbour nodes.
            </summary>
        </member>
        <member name="P:Osm.Data.Core.Sparse.Primitives.SparseVertex.Location">
            <summary>
            Returns the location of this point.
            </summary>
        </member>
        <member name="P:Osm.Data.Core.Sparse.Primitives.SparseVertex.Tags">
            <summary>
            The tags of this vertex.
            </summary>
        </member>
        <member name="T:Osm.Data.Core.Sparse.Primitives.SparseVertexNeighbour">
            <summary>
            A sparse vertex's neighbours.
            </summary>
        </member>
        <member name="P:Osm.Data.Core.Sparse.Primitives.SparseVertexNeighbour.Id">
            <summary>
            The id.
            </summary>
        </member>
        <member name="P:Osm.Data.Core.Sparse.Primitives.SparseVertexNeighbour.Weight">
            <summary>
            The weight.
            </summary>
        </member>
        <member name="P:Osm.Data.Core.Sparse.Primitives.SparseVertexNeighbour.Nodes">
            <summary>
            The nodes in between.
            </summary>
        </member>
        <member name="P:Osm.Data.Core.Sparse.Primitives.SparseVertexNeighbour.Directed">
            <summary>
            The neighbour is directed.
            </summary>
        </member>
        <member name="P:Osm.Data.Core.Sparse.Primitives.SparseVertexNeighbour.Direction">
            <summary>
            The direction (true is along the direction of this neighbour).
            </summary>
        </member>
        <member name="P:Osm.Data.Core.Sparse.Primitives.SparseVertexNeighbour.Tags">
            <summary>
            The actual tags.
            </summary>
        </member>
        <member name="P:Osm.Data.Core.Processor.Filter.Sort.DataProcessorFilterSort.CanReset">
            <summary>
            Returns true if this source can be reset.
            </summary>
        </member>
        <member name="M:Osm.Data.Cache.DataSourceQuadTree.#ctor(System.Int32,Tools.Math.Geo.GeoCoordinateBox)">
            <summary>
            Creates a new quad tree.
            </summary>
            <param name="bounds"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Cache.DataSourceQuadTree.#ctor(System.Int32,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a new quad tree.
            </summary>
            <param name="bounds"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Cache.DataSourceQuadTree.Create(System.Int32,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a new quad tree node.
            </summary>
            <param name="dept"></param>
            <param name="min_0"></param>
            <param name="min_1"></param>
            <param name="max_0"></param>
            <param name="max_1"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Cache.DataSourceQuadTree.Expand(System.Boolean,System.Boolean,Tools.Math.Structures.QTree.QuadTreeNode{Tools.Math.Geo.GeoCoordinate})">
            <summary>
            Expands the given node in the given directions.
            </summary>
            <param name="min0"></param>
            <param name="min1"></param>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:Osm.Data.Core.Processor.ChangeSets.DataProcessorChangeSetTarget">
            <summary>
            A changeset target that acts as a source of osm data; 
            Input=One changeset stream
            </summary>
        </member>
        <member name="F:Osm.Data.Core.Processor.ChangeSets.DataProcessorChangeSetTarget._source">
            <summary>
            The source this target get's it's data from.
            </summary>
        </member>
        <member name="M:Osm.Data.Core.Processor.ChangeSets.DataProcessorChangeSetTarget.#ctor">
            <summary>
            Creates a new change set data source by applying the changes to the given source.
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:Osm.Data.Core.Processor.ChangeSets.DataProcessorChangeSetTarget.ApplyChange(Osm.Core.Simple.SimpleChangeSet)">
            <summary>
            Applies a change to the target.
            </summary>
            <param name="change"></param>
        </member>
        <member name="M:Osm.Data.Core.Processor.ChangeSets.DataProcessorChangeSetTarget.Pull">
            <summary>
            Pulls the changes from the source to this target.
            </summary>
        </member>
        <member name="M:Osm.Data.Core.Processor.ChangeSets.DataProcessorChangeSetTarget.Initialize">
            <summary>
            Initializes this target.
            </summary>
        </member>
        <member name="M:Osm.Data.Core.Processor.ChangeSets.DataProcessorChangeSetTarget.Close">
            <summary>
            Closes the current target.
            </summary>
        </member>
        <member name="M:Osm.Data.Core.Processor.ChangeSets.DataProcessorChangeSetTarget.RegisterSource(Osm.Data.Core.Processor.ChangeSets.DataProcessorChangeSetSource)">
            <summary>
            Registers the source for this target.
            </summary>
            <param name="source"></param>
        </member>
        <member name="T:Osm.Data.Cache.DataSourceCache">
            <summary>
            Class used for caching data using bounding boxes.
            
            TODO: implement a way to expire cached data!!!!!!
            </summary>
        </member>
        <member name="F:Osm.Data.Cache.DataSourceCache._zoom_level">
            <summary>
            The zoom level of the boxes to cache at.
            </summary>
        </member>
        <member name="F:Osm.Data.Cache.DataSourceCache._source">
            <summary>
            The data source.
            </summary>
        </member>
        <member name="F:Osm.Data.Cache.DataSourceCache._id">
            <summary>
            The unique id of this data source.
            </summary>
        </member>
        <member name="M:Osm.Data.Cache.DataSourceCache.#ctor(Osm.Data.IDataSourceReadOnly,System.Int32)">
            <summary>
            Creates a new datasource cache.
            </summary>
            <param name="source">The data source being wrapped and cached.</param>
            <param name="zoom_level">The zoom level to use as a caching structure.</param>
        </member>
        <member name="M:Osm.Data.Cache.DataSourceCache.InitializeCache">
            <summary>
            Initializes the data cache.
            </summary>
        </member>
        <member name="F:Osm.Data.Cache.DataSourceCache._tiles_cache">
            <summary>
            Holds the cached objects based on the same calculations as standard tile generations.
            
            A zoom level can be chosen to calculate the size of the caching strategy.
            </summary>
        </member>
        <member name="M:Osm.Data.Cache.DataSourceCache.GetObjectsInBox(System.Int32,System.Int32)">
            <summary>
            Returns all osm object in a bounding box from cache or from the wrapped data source.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Cache.DataSourceCache.GetNode(System.Int64)">
            <summary>
            Returns a node with the given id.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Cache.DataSourceCache.GetNodes(System.Collections.Generic.IList{System.Int64})">
            <summary>
            Returns a list of nodes matching the given id's.
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Cache.DataSourceCache.GetRelation(System.Int64)">
            <summary>
            Returns the relation with the given id.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Cache.DataSourceCache.GetRelations(System.Collections.Generic.IList{System.Int64})">
            <summary>
            Returns a list of relations matching the given id's.
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Cache.DataSourceCache.GetRelationsFor(Osm.Core.OsmBase)">
            <summary>
            Returns a list of relations for a given object.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Cache.DataSourceCache.GetWay(System.Int64)">
            <summary>
            Returns a way with the given id.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Cache.DataSourceCache.GetWays(System.Collections.Generic.IList{System.Int64})">
            <summary>
            Returns a list of ways for the given id's.
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Cache.DataSourceCache.GetWaysFor(Osm.Core.Node)">
            <summary>
            Returns a list of ways for a given node.
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Cache.DataSourceCache.GetWaysFor(Osm.Core.Node,System.Boolean)">
            <summary>
            Returns a list of ways for a given node.
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:Osm.Data.Cache.DataSourceCache.Get(Tools.Math.Geo.GeoCoordinateBox,Osm.Core.Filters.Filter)">
            <summary>
            Returns a list of objects inside a bounding box.
            </summary>
            <param name="box"></param>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="T:Osm.Data.Core.Processor.ChangeSets.Impl.DataProcessorChangeSetStreamedTarget">
            <summary>
            Class accepting a stream of changesets and merging it with a stream of OsmGeo objects to produce a changed stream source of OsmGeo data.
            </summary>
        </member>
        <member name="M:Osm.Data.Core.Processor.ChangeSets.Impl.DataProcessorChangeSetStreamedTarget.#ctor">
            <summary>
            Creates a new change set data source by applying the changes to the given source.
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:Osm.Data.Core.Processor.ChangeSets.Impl.DataProcessorChangeSetStreamedTarget.ApplyChange(Osm.Core.Simple.SimpleChangeSet)">
            <summary>
            Applies a change to the target.
            </summary>
            <param name="change"></param>
        </member>
        <member name="M:Osm.Data.Core.Processor.ChangeSets.Impl.DataProcessorChangeSetStreamedTarget.Pull(Osm.Data.Core.Processor.ChangeSets.DataProcessorChangeSetSource)">
            <summary>
            Pulls the changes from the source to this target.
            </summary>
        </member>
        <member name="M:Osm.Data.Core.Processor.ChangeSets.Impl.DataProcessorChangeSetStreamedTarget.Close">
            <summary>
            Closes the current target.
            </summary>
        </member>
    </members>
</doc>
